//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
using DslValidation = global::Microsoft.VisualStudio.Modeling.Validation;
namespace Empresa.MoneyManagerModel
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public partial class AttributeType
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateAttributeTypeMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.UserAttributes == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"AttributeType", "", "UserAttributes"),
						"DSL0001", this);
			}
			if (this.AccountAttribute == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"AttributeType", "", "AccountAttribute"),
						"DSL0001", this);
			}
			if (this.TransactionAttributes == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"AttributeType", "", "TransactionAttributes"),
						"DSL0001", this);
			}
		} // ValidateAttributeTypeMultiplicity
	} // class AttributeType
} // Empresa.MoneyManagerModel

namespace Empresa.MoneyManagerModel
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public partial class Association
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateAssociationMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.TransactionSpec == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"Association", "", "TransactionSpec"),
						"DSL0001", this);
			}
			if (this.TransactionSpecs == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"Association", "", "TransactionSpecs"),
						"DSL0001", this);
			}
			if (this.AccountSpec == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"Association", "", "AccountSpec"),
						"DSL0001", this);
			}
			if (this.AccountSpecs == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"Association", "", "AccountSpecs"),
						"DSL0001", this);
			}
			if (this.UserSpec == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"Association", "", "UserSpec"),
						"DSL0001", this);
			}
			if (this.UserSpecs == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"Association", "", "UserSpecs"),
						"DSL0001", this);
			}
		} // ValidateAssociationMultiplicity
	} // class Association
} // Empresa.MoneyManagerModel

namespace Empresa.MoneyManagerModel
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public partial class UserAttribute
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateUserAttributeMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.AttributeTypes == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"UserAttribute", "", "AttributeTypes"),
						"DSL0001", this);
			}
		} // ValidateUserAttributeMultiplicity
	} // class UserAttribute
} // Empresa.MoneyManagerModel

namespace Empresa.MoneyManagerModel
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public partial class AccountAttribute
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateAccountAttributeMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.AttributeTypes == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"AccountAttribute", "", "AttributeTypes"),
						"DSL0001", this);
			}
		} // ValidateAccountAttributeMultiplicity
	} // class AccountAttribute
} // Empresa.MoneyManagerModel

namespace Empresa.MoneyManagerModel
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public partial class TransactionAttribute
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateTransactionAttributeMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.AttributeTypes == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"TransactionAttribute", "", "AttributeTypes"),
						"DSL0001", this);
			}
		} // ValidateTransactionAttributeMultiplicity
	} // class TransactionAttribute
} // Empresa.MoneyManagerModel

	
 