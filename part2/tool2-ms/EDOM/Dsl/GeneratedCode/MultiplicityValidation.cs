//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
using DslValidation = global::Microsoft.VisualStudio.Modeling.Validation;
namespace Empresa.MoneyManagerModel
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public partial class AccountSpec
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateAccountSpecMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.AccountGroupSpec == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"AccountSpec", "", "AccountGroupSpec"),
						"DSL0001", this);
			}
		} // ValidateAccountSpecMultiplicity
	} // class AccountSpec
} // Empresa.MoneyManagerModel

namespace Empresa.MoneyManagerModel
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public partial class AttributeType
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateAttributeTypeMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.UserAttributes == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"AttributeType", "", "UserAttributes"),
						"DSL0001", this);
			}
			if (this.AccountAttribute == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"AttributeType", "", "AccountAttribute"),
						"DSL0001", this);
			}
			if (this.TransactionAttributes == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"AttributeType", "", "TransactionAttributes"),
						"DSL0001", this);
			}
			if (this.CategoryAttribute1 == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"AttributeType", "", "CategoryAttribute1"),
						"DSL0001", this);
			}
		} // ValidateAttributeTypeMultiplicity
	} // class AttributeType
} // Empresa.MoneyManagerModel

namespace Empresa.MoneyManagerModel
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public partial class UserAttribute
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateUserAttributeMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.AttributeTypes == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"UserAttribute", "", "AttributeTypes"),
						"DSL0001", this);
			}
		} // ValidateUserAttributeMultiplicity
	} // class UserAttribute
} // Empresa.MoneyManagerModel

namespace Empresa.MoneyManagerModel
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public partial class AccountAttribute
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateAccountAttributeMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.AttributeTypes == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"AccountAttribute", "", "AttributeTypes"),
						"DSL0001", this);
			}
		} // ValidateAccountAttributeMultiplicity
	} // class AccountAttribute
} // Empresa.MoneyManagerModel

namespace Empresa.MoneyManagerModel
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public partial class TransactionAttribute
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateTransactionAttributeMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.AttributeTypes == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"TransactionAttribute", "", "AttributeTypes"),
						"DSL0001", this);
			}
		} // ValidateTransactionAttributeMultiplicity
	} // class TransactionAttribute
} // Empresa.MoneyManagerModel

namespace Empresa.MoneyManagerModel
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public partial class UserAccountAssociation
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateUserAccountAssociationMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.UserSpec == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"UserAccountAssociation", "", "UserSpec"),
						"DSL0001", this);
			}
			if (this.AccountSpec == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"UserAccountAssociation", "", "AccountSpec"),
						"DSL0001", this);
			}
		} // ValidateUserAccountAssociationMultiplicity
	} // class UserAccountAssociation
} // Empresa.MoneyManagerModel

namespace Empresa.MoneyManagerModel
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public partial class AccountTransactionAssociation
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateAccountTransactionAssociationMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.AccountSpec == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"AccountTransactionAssociation", "", "AccountSpec"),
						"DSL0001", this);
			}
			if (this.TransactionSpec == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"AccountTransactionAssociation", "", "TransactionSpec"),
						"DSL0001", this);
			}
		} // ValidateAccountTransactionAssociationMultiplicity
	} // class AccountTransactionAssociation
} // Empresa.MoneyManagerModel

namespace Empresa.MoneyManagerModel
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public partial class CategorySpec
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateCategorySpecMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.CategoryAttribute.Count == 0)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"CategorySpec", "", "CategoryAttribute"),
						"DSL0001", this);
			}
		} // ValidateCategorySpecMultiplicity
	} // class CategorySpec
} // Empresa.MoneyManagerModel

namespace Empresa.MoneyManagerModel
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public partial class CategoryAttribute
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateCategoryAttributeMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.AttributeType1 == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"CategoryAttribute", "", "AttributeType1"),
						"DSL0001", this);
			}
		} // ValidateCategoryAttributeMultiplicity
	} // class CategoryAttribute
} // Empresa.MoneyManagerModel

namespace Empresa.MoneyManagerModel
{
	[DslValidation::ValidationState(DslValidation::ValidationState.Enabled)]
	public partial class CategoryTransactionAssociation
	{
		/// <summary>
		/// Checks that the relationships that have a multiplicity of One or OneMany do actually have a link.
		/// </summary>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Justification = "Generated code.")]
		[DslValidation::ValidationMethod(DslValidation::ValidationCategories.Open | DslValidation::ValidationCategories.Save | DslValidation::ValidationCategories.Menu)]
		private void ValidateCategoryTransactionAssociationMultiplicity (DslValidation::ValidationContext context)
		{
			if (this.CategorySpec == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"CategoryTransactionAssociation", "", "CategorySpec"),
						"DSL0001", this);
			}
			if (this.TransactionSpec == null)
			{
				context.LogViolation(DslValidation::ViolationType.Error,
					string.Format(global::System.Globalization.CultureInfo.CurrentCulture, 
						Empresa.MoneyManagerModel.MoneyManagerModelDomainModel.SingletonResourceManager.GetString("MinimumMultiplicityMissingLink"), 
						"CategoryTransactionAssociation", "", "TransactionSpec"),
						"DSL0001", this);
			}
		} // ValidateCategoryTransactionAssociationMultiplicity
	} // class CategoryTransactionAssociation
} // Empresa.MoneyManagerModel

	
 