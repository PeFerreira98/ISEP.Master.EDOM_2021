pre
{
	var modname : String = Model.allInstances().first().name.toLowerCase();
	var hasAccountGroup : Boolean = AccountGroupSpec.allInstances().notEmpty();
	var hasCategory : Boolean = CategorySpec.allInstances().notEmpty();
	var targetPath : String = "gen/" + modname + "/src/main/java/";
}

rule categoryToCode transform cSpec : CategorySpec
{
	parameters : Map
	{
		"modname" = modname
	}
	template: "egl/categoryToCode.egl"
	target: targetPath + cSpec.name + ".java"
}

rule accountGroupToCode transform aSpec : AccountGroupSpec
{
	parameters : Map
	{
		"modname" = modname
	}
	template: "egl/accountGroupToCode.egl"
	target: targetPath + aSpec.name + ".java"
}

rule transactionToCode transform tranSpec : TransactionSpec
{
	pre
	{
		var catName : String = "";
		if(hasCategory)
		{
			catName = CategorySpec.allInstances().first().name;
		}
	}
	parameters : Map
	{
		"modname" = modname,
		"hasCategory" = hasCategory,
		"categoryName" = catName
	}
	template: "egl/transactionToCode.egl"
	target: targetPath + tranSpec.name + ".java"
}

rule accountToCode transform actSpec : AccountSpec
{
	parameters : Map
	{
		"modname" = modname
	}
	template: "egl/accountToCode.egl"
	target: targetPath + actSpec.name + ".java"
}

rule userToCode transform usrSpec : UserSpec
{
	parameters : Map
	{
		"modname" = modname
	}
	template: "egl/userToCode.egl"
	target: targetPath + usrSpec.name + ".java"
}

rule modelToCode transform mod : Model
{
	pre
	{
		var accGroupName : String = "";
		var usrName : String = UserSpec.allInstances().first().name;
		if(hasAccountGroup)
		{
			accGroupName = AccountGroupSpec.allInstances().first().name;
		}
	}
	parameters : Map
	{
		"modname" = modname,
		"hasAccountGroup" = hasAccountGroup,
		"accountGroupName" = accGroupName,
		"userName" = usrName
	}
	template: "egl/modelToCode.egl"
	target: targetPath + "Model.java"
}

rule programToCode
{
	parameters : Map
	{
		"modname" = modname,
		"hasAccountGroup" = hasAccountGroup
	}
	template: "egl/programToCode.egl"
	target: targetPath + "Program.java"
}

rule pomToCode
{
	template: "egl/pomToCode.egl"
	target: "gen/" + modname + "/pom.xml"
}