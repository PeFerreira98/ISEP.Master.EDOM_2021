pre
{
	var modname = Model.allInstances().first().name;
}

rule accountGroupToCode
{
	template: "egl/accountGroupToCode.egl"
	target: "gen/" + modname + "/src/main/java/AccountGroup.java"
}

rule categoryToCode
{
	template: "egl/categoryToCode.egl"
	target: "gen/" + modname + "/src/main/java/Category.java"
}

rule transactionToCode transform tranSpec : TransactionSpec
{
	parameters : Map
	{
		"modname" = modname
	}
	
	template: "egl/transactionToCode.egl"
	target: "gen/" + modname + "/src/main/java/" + tranSpec.name + ".java"
}

rule accountToCode transform actSpec : AccountSpec
{
	parameters : Map
	{
		"modname" = modname
	}
	
	template: "egl/accountToCode.egl"
	target: "gen/" + modname + "/src/main/java/" + actSpec.name + ".java"
}

rule userToCode transform usrSpec : UserSpec
{
	parameters : Map
	{
		"modname" = modname
	}

	template: "egl/userToCode.egl"
	target: "gen/" + modname + "/src/main/java/" + usrSpec.name + ".java"
}

rule modelToCode transform mod : Model
{
	template: "egl/modelToCode.egl"
	target: "gen/" + modname + "/src/main/java/Model.java"
}

rule programToCode transform mod : Model
{
	template: "egl/programToCode.egl"
	target: "gen/" + modname + "/src/main/java/Program.java"
}

rule pomToCode
{
	template: "egl/pomToCode.egl"
	target: "gen/" + modname + "/pom.xml"
}